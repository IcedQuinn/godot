<?xml version="1.0" encoding="UTF-8" ?>
<class name="JSONRPC" inherits="Object" version="4.0">
	<brief_description>
	A helper to handle dictionaries which look like JSONRPC documents.
	</brief_description>
	<description>
    	JSON-RPC is a standard which wraps a method call in a JSON object. The object has a particular structure and identifies which method is called, the parameters to that function, and carries an ID to keep track of responses. This class implements that standard on top of Dictionaries; you will have to convert between a Dictionary and JSON with other functions.
        See: https://www.jsonrpc.org/specification
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="make_notification">
			<return type="Dictionary">
			</return>
			<argument index="0" name="method" type="String">
    			Name of the method being called.
			</argument>
			<argument index="1" name="params" type="Variant">
    			An array or dictionary of parameters being passed to the method.
        		</argument>
			<description>
    			Returns a dictionary in the form of a JSON-RPC notification. Notifications are one-shot messages which do not expect a response.
			</description>
		</method>
		<method name="make_request">
			<return type="Dictionary">
			</return>
			<argument index="0" name="method" type="String">
    			Name of the method being called.
			</argument>
			<argument index="1" name="params" type="Variant">
    			An array or dictionary of parameters being passed to the method.
			</argument>
			<argument index="2" name="id" type="Variant">
    			Uniquely identifies this request. The server is expected to send a response with the same ID.
			</argument>
			<description>
    			Returns a dictionary in the form of a JSON-RPC request. Requests are sent to a server with the expectation of a response. The ID field is used for the server to specify which exact request it is responding to.
			</description>
		</method>
		<method name="make_response">
			<return type="Dictionary">
			</return>
			<argument index="0" name="result" type="Variant">
    			The return value of the function which was called.
			</argument>
			<argument index="1" name="id" type="Variant">
    			The ID of the request this response is targeted to.
			</argument>
			<description>
    			When a server has received and processed a request, it is expected to send a response. If you did not want a response then you need to have sent a Notification instead.
			</description>
		</method>
		<method name="make_response_error" qualifiers="const">
			<return type="Dictionary">
			</return>
			<argument index="0" name="code" type="int">
    			The error code corresponding to what kind of error this is. See the ErrorCode constants.
			</argument>
			<argument index="1" name="message" type="String">
    			A custom message about this error.
			</argument>
			<argument index="2" name="id" type="Variant" default="null">
    			The request this error is a response to.
			</argument>
			<description>
			</description>
		</method>
		<method name="process_action">
			<return type="Variant">
			</return>
			<argument index="0" name="action" type="Variant">
    			The action to be run, as a Dictionary in the form of a JSON-RPC request or notification.
			</argument>
			<argument index="1" name="recurse" type="bool" default="false">
			</argument>
			<description>
    			Given a Dictionary which takes the form of a JSON-RPC request: unpack the request and run it. Methods are resolved by looking at the field called "method" and looking for an equivalently named function in the JSONRPC object. If one is found that method is called.
    			To add new supported methods extend the JSONRPC class and call [code]process_action[/code] on your subclass.
        		</description>
		</method>
		<method name="process_string">
			<return type="String">
			</return>
			<argument index="0" name="action" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_scope">
			<return type="void">
			</return>
			<argument index="0" name="scope" type="String">
			</argument>
			<argument index="1" name="target" type="Object">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<constants>
		<constant name="PARSE_ERROR" value="-32700" enum="ErrorCode">
		</constant>
		<constant name="INVALID_REQUEST" value="-32600" enum="ErrorCode">
		</constant>
		<constant name="METHOD_NOT_FOUND" value="-32601" enum="ErrorCode">
    		A method call was requested but no function of that name existed in the JSONRPC subclass.
		</constant>
		<constant name="INVALID_PARAMS" value="-32602" enum="ErrorCode">
		</constant>
		<constant name="INTERNAL_ERROR" value="-32603" enum="ErrorCode">
		</constant>
	</constants>
</class>
